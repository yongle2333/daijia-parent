//package对应的不一定是真正的目录，可以任意写com.abc，同一个包下的drl文件可以相互访问
package  com.qiu.daijia

import com.atguigu.daijia.model.form.rules.FeeRuleRequest;
import java.math.BigDecimal;
import java.math.RoundingMode;

global com.atguigu.daijia.model.vo.rules.FeeRuleResponse feeRuleResponse;

/**
1.起步价
    00:00:00-06:59:59  19元(含3公里)
    07:00:00-23:59:59  19元(含5公里)
*/
rule "起步价 00:00:00-06:59:59  19元(含3公里)"
    salience 10     //优先级
    no-loop true    //防止死循环

    when
        $rule:FeeRuleRequest(startTime >= "00:00:00" && startTime < "07:00:00")
    then
        //基础里程 3公里
        feeRuleResponse.setBaseDistance(new BigDecimal("3.0"));
        //收费 19元
        feeRuleResponse.setBaseDistanceFee(new BigDecimal("19.0"));
        //超出里程 超出基础里程
        feeRuleResponse.setExceedDistance(new BigDecimal("0.0"));
        feeRuleResponse.setExceedDistancePrice(new BigDecimal("4.0"));
        System.out.println("00:00:00-06:59:59 " + feeRuleResponse.getBaseDistance() + "公里，起步价:" + feeRuleResponse.getBaseDistanceFee() + "元");

end

rule "起步价 07:00:00-23:59:59  19元(含5公里)"
    salience 9
    no-loop true

    when
        $rule:FeeRuleRequest(startTime >= "07:00:00" && startTime <= "23:59:59")
    then
    feeRuleResponse.setBaseDistance(new BigDecimal("5.0"));
    feeRuleResponse.setBaseDistanceFee(new BigDecimal("19.0"));
    //超出基础里程
    feeRuleResponse.setExceedDistance(new BigDecimal("0.0"));
    feeRuleResponse.setExceedDistancePrice(new BigDecimal("3.0"));
    System.out.println("07:00:00-23:59:59 " + feeRuleResponse.getBaseDistance() + "公里，起步价:" + feeRuleResponse.getBaseDistanceFee() + "元");

end



/**
2.里程费
    超出起步里程后开始计算
    00:00:00-06:59:59   4元/1公里
    07:00:00-23:59:59   3元/1公里
*/





/**
3.等候费
    等候10分钟后  1元/1分钟
*/





/**
4.远途费
    订单行程超出12公里后每公里1元
*/





/**
5.计算总金额
    订单总金额 = 基础里程费 + 超出基础里程的费 + 等候费 + 远程费
*/
